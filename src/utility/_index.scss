@function is-map($var){
    @return type-of($var) == 'map';
};

@mixin make-flex($dir:row, $justify:flex-start, $align:flex-start) {
    @if & {
        display: flex;
        flex-direction: $dir;
        justify-content: $justify;
        align-items: $align;
    }
}

@mixin centered-flex($dir:row) {
    @include make-flex($dir, center, center);
}

@mixin add-flex-list-subclass($dir:column, $justify:flex-start, $align:flex-start) {
    &__list {
        @include make-flex($dir, $justify, $align);
        @content;
    }
}

@mixin add-flex-container-subclass($dir:row, $justify:flex-start, $align:center) {
    &__container {
        @include make-flex($dir, $justify, $align);
        @content;
    }
}

@function create-group($text,$background: none,$border: none){
    @return (
        "text": $text,
        "background": $background,
        "border": $border
    )
  };
  
@mixin status-mixin($text,$background,$border) {
    color: $text;
    background-color: $background;
    border-color: $border
}

@mixin status($group) {
    @include status-mixin(
        map-get($group,"text"), 
        map-get($group,"background"), 
        map-get($group,"border")
    )
}

// Creates an outline border. Works when a class has a set padding and border width
// and passes it to the mixin. 
@mixin synthetic-outline-border ($width, $top, $right, $bottom, $left) {
    $focus-displacement: $width * 3;
    border-width: $width * 4;
    border-style: double;
    background-clip: padding-box;
    padding:
        $top - $focus-displacement
        $right - $focus-displacement
        $bottom - $focus-displacement
        $left - $focus-displacement
    ;
  }